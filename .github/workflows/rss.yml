- name: Fetch Blogger RSS and convert to Jekyll posts
        run: |
          pip install pyyaml feedparser beautifulsoup4
          python - <<'EOF'
          import feedparser, os, re, datetime, yaml
          from bs4 import BeautifulSoup

          feed = feedparser.parse("https://jobscholarguide.blogspot.com/feeds/posts/default?alt=rss")
          os.makedirs("_posts", exist_ok=True)

          for entry in feed.entries:
              # format file name
              date = datetime.datetime(*entry.published_parsed[:6]).strftime("%Y-%m-%d")
              slug = re.sub(r'[^a-z0-9]+', '-', entry.title.lower()).strip('-')
              filename = f"_posts/{date}-{slug}.md"

              if not os.path.exists(filename):
                  # --- Extract and clean summary ---
                  raw_summary = entry.get("summary", "").strip()
                  soup = BeautifulSoup(raw_summary, "html.parser")
                  clean_text = soup.get_text(" ", strip=True)

                  # First 50 words only
                  words = clean_text.split()
                  summary = " ".join(words[:50]) + ("..." if len(words) > 50 else "")

                  # Tags if available
                  tags = [t.term for t in entry.get("tags", [])] if "tags" in entry else []

                  # Featured image
                  image = None
                  if "media_thumbnail" in entry:
                      image = entry.media_thumbnail[0]['url']
                  elif "media_content" in entry:
                      image = entry.media_content[0]['url']

                  # Escape title
                  title = entry.title.replace('"', "'")

                  # Build front matter as dict
                  front_matter = {
                      "layout": "post",
                      "title": title,
                      "date": date,
                      "description": summary,
                      "tags": tags,
                      "canonical_url": entry.link,
                  }
                  if image:
                      front_matter["image"] = image

                  with open(filename, "w", encoding="utf-8") as f:
                      f.write("---\n")
                      yaml.dump(front_matter, f, allow_unicode=True, default_flow_style=False, sort_keys=False)
                      f.write("---\n\n")

                      # --- Body ---
                      f.write(f"{summary}\n\n")
                      f.write("<!--more-->\n\n")
                      f.write(f"ðŸ‘‰ [Read the full article on JobScholarGuide]({entry.link})\n")
          EOF
